// Mocks generated by Mockito 5.4.2 from annotations
// in al_quran/test/helper/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i16;
import 'dart:ui' as _i19;

import 'package:al_quran/reconstructed_app/core/core.dart' as _i21;
import 'package:al_quran/reconstructed_app/data/data.dart' as _i10;
import 'package:al_quran/reconstructed_app/domain/domain.dart' as _i12;
import 'package:al_quran/reconstructed_app/presentation/cubit/surah/surah_cubit.dart'
    as _i14;
import 'package:bloc/bloc.dart' as _i22;
import 'package:dartz/dartz.dart' as _i11;
import 'package:dio/dio.dart' as _i15;
import 'package:dio/src/adapter.dart' as _i3;
import 'package:dio/src/cancel_token.dart' as _i17;
import 'package:dio/src/dio_mixin.dart' as _i5;
import 'package:dio/src/options.dart' as _i2;
import 'package:dio/src/response.dart' as _i6;
import 'package:dio/src/transformer.dart' as _i4;
import 'package:flutter/widgets.dart' as _i20;
import 'package:get/utils.dart' as _i8;
import 'package:get_storage/src/storage_impl.dart' as _i7;
import 'package:get_storage/src/value.dart' as _i9;
import 'package:logging/logging.dart' as _i13;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i18;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseOptions_0 extends _i1.SmartFake implements _i2.BaseOptions {
  _FakeBaseOptions_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_1 extends _i1.SmartFake
    implements _i3.HttpClientAdapter {
  _FakeHttpClientAdapter_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_2 extends _i1.SmartFake implements _i4.Transformer {
  _FakeTransformer_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_3 extends _i1.SmartFake implements _i5.Interceptors {
  _FakeInterceptors_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_4<T1> extends _i1.SmartFake implements _i6.Response<T1> {
  _FakeResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMicrotask_5 extends _i1.SmartFake implements _i7.Microtask {
  _FakeMicrotask_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetQueue_6 extends _i1.SmartFake implements _i8.GetQueue {
  _FakeGetQueue_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeValueStorage_7<T> extends _i1.SmartFake
    implements _i9.ValueStorage<T> {
  _FakeValueStorage_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurahDetail_8 extends _i1.SmartFake implements _i10.SurahDetail {
  _FakeSurahDetail_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_9<L, R> extends _i1.SmartFake implements _i11.Either<L, R> {
  _FakeEither_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurahRepository_10 extends _i1.SmartFake
    implements _i12.SurahRepository {
  _FakeSurahRepository_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLogger_11 extends _i1.SmartFake implements _i13.Logger {
  _FakeLogger_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurahDetailRepository_12 extends _i1.SmartFake
    implements _i12.SurahDetailRepository {
  _FakeSurahDetailRepository_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurahUsecase_13 extends _i1.SmartFake implements _i12.SurahUsecase {
  _FakeSurahUsecase_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSurahState_14 extends _i1.SmartFake implements _i14.SurahState {
  _FakeSurahState_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i15.Dio {
  @override
  _i2.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.BaseOptions);

  @override
  set options(_i2.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
        returnValueForMissingStub: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i3.HttpClientAdapter);

  @override
  set httpClientAdapter(_i3.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
        returnValueForMissingStub: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i4.Transformer);

  @override
  set transformer(_i4.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
        returnValueForMissingStub: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i5.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<_i6.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i17.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<T>>);

  @override
  _i16.Future<_i6.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i17.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<T>>);

  @override
  _i16.Future<_i6.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i17.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<T>>);

  @override
  _i16.Future<_i6.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i17.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<T>>);

  @override
  _i16.Future<_i6.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i17.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<T>>);

  @override
  _i16.Future<_i6.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i17.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<T>>);

  @override
  _i16.Future<_i6.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i17.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<T>>);

  @override
  _i16.Future<_i6.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i17.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<T>>);

  @override
  _i16.Future<_i6.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i17.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<T>>);

  @override
  _i16.Future<_i6.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i17.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<T>>);

  @override
  _i16.Future<_i6.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i17.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<T>>);

  @override
  _i16.Future<_i6.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i17.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<T>>);

  @override
  _i16.Future<_i6.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i17.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i16.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<dynamic>>);

  @override
  _i16.Future<_i6.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    _i17.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i16.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<dynamic>>);

  @override
  _i16.Future<_i6.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i17.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<T>>);

  @override
  _i16.Future<_i6.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i17.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i6.Response<T>>);

  @override
  _i16.Future<_i6.Response<T>> fetch<T>(_i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i16.Future<_i6.Response<T>>);
}

/// A class which mocks [GetStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetStorage extends _i1.Mock implements _i7.GetStorage {
  @override
  _i7.Microtask get microtask => (super.noSuchMethod(
        Invocation.getter(#microtask),
        returnValue: _FakeMicrotask_5(
          this,
          Invocation.getter(#microtask),
        ),
        returnValueForMissingStub: _FakeMicrotask_5(
          this,
          Invocation.getter(#microtask),
        ),
      ) as _i7.Microtask);

  @override
  _i8.GetQueue get queue => (super.noSuchMethod(
        Invocation.getter(#queue),
        returnValue: _FakeGetQueue_6(
          this,
          Invocation.getter(#queue),
        ),
        returnValueForMissingStub: _FakeGetQueue_6(
          this,
          Invocation.getter(#queue),
        ),
      ) as _i8.GetQueue);

  @override
  set queue(_i8.GetQueue? _queue) => super.noSuchMethod(
        Invocation.setter(
          #queue,
          _queue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<bool> get initStorage => (super.noSuchMethod(
        Invocation.getter(#initStorage),
        returnValue: _i16.Future<bool>.value(false),
        returnValueForMissingStub: _i16.Future<bool>.value(false),
      ) as _i16.Future<bool>);

  @override
  set initStorage(_i16.Future<bool>? _initStorage) => super.noSuchMethod(
        Invocation.setter(
          #initStorage,
          _initStorage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> get changes => (super.noSuchMethod(
        Invocation.getter(#changes),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i9.ValueStorage<Map<String, dynamic>> get listenable => (super.noSuchMethod(
        Invocation.getter(#listenable),
        returnValue: _FakeValueStorage_7<Map<String, dynamic>>(
          this,
          Invocation.getter(#listenable),
        ),
        returnValueForMissingStub: _FakeValueStorage_7<Map<String, dynamic>>(
          this,
          Invocation.getter(#listenable),
        ),
      ) as _i9.ValueStorage<Map<String, dynamic>>);

  @override
  T? read<T>(String? key) => (super.noSuchMethod(
        Invocation.method(
          #read,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as T?);

  @override
  T getKeys<T>() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: _i18.dummyValue<T>(
          this,
          Invocation.method(
            #getKeys,
            [],
          ),
        ),
        returnValueForMissingStub: _i18.dummyValue<T>(
          this,
          Invocation.method(
            #getKeys,
            [],
          ),
        ),
      ) as T);

  @override
  T getValues<T>() => (super.noSuchMethod(
        Invocation.method(
          #getValues,
          [],
        ),
        returnValue: _i18.dummyValue<T>(
          this,
          Invocation.method(
            #getValues,
            [],
          ),
        ),
        returnValueForMissingStub: _i18.dummyValue<T>(
          this,
          Invocation.method(
            #getValues,
            [],
          ),
        ),
      ) as T);

  @override
  bool hasData(String? key) => (super.noSuchMethod(
        Invocation.method(
          #hasData,
          [key],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i19.VoidCallback listen(_i19.VoidCallback? value) => (super.noSuchMethod(
        Invocation.method(
          #listen,
          [value],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i19.VoidCallback);

  @override
  _i19.VoidCallback listenKey(
    String? key,
    _i20.ValueSetter<dynamic>? callback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #listenKey,
          [
            key,
            callback,
          ],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i19.VoidCallback);

  @override
  _i16.Future<void> write(
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [
            key,
            value,
          ],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  void writeInMemory(
    String? key,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #writeInMemory,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<void> writeIfNull(
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeIfNull,
          [
            key,
            value,
          ],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> erase() => (super.noSuchMethod(
        Invocation.method(
          #erase,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> save() => (super.noSuchMethod(
        Invocation.method(
          #save,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);
}

/// A class which mocks [SurahProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahProvider extends _i1.Mock implements _i10.SurahProvider {
  @override
  _i16.Future<List<_i10.Surah>> getSurahs() => (super.noSuchMethod(
        Invocation.method(
          #getSurahs,
          [],
        ),
        returnValue: _i16.Future<List<_i10.Surah>>.value(<_i10.Surah>[]),
        returnValueForMissingStub:
            _i16.Future<List<_i10.Surah>>.value(<_i10.Surah>[]),
      ) as _i16.Future<List<_i10.Surah>>);
}

/// A class which mocks [SurahDetailProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahDetailProvider extends _i1.Mock
    implements _i10.SurahDetailProvider {
  @override
  _i16.Future<_i10.SurahDetail> getSurahDetail({required int? surahNumber}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSurahDetail,
          [],
          {#surahNumber: surahNumber},
        ),
        returnValue: _i16.Future<_i10.SurahDetail>.value(_FakeSurahDetail_8(
          this,
          Invocation.method(
            #getSurahDetail,
            [],
            {#surahNumber: surahNumber},
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i10.SurahDetail>.value(_FakeSurahDetail_8(
          this,
          Invocation.method(
            #getSurahDetail,
            [],
            {#surahNumber: surahNumber},
          ),
        )),
      ) as _i16.Future<_i10.SurahDetail>);
}

/// A class which mocks [SurahRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahRepository extends _i1.Mock implements _i12.SurahRepository {
  @override
  _i16.Future<_i11.Either<_i21.Failure, List<_i10.Surah>>> getSurahs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSurahs,
          [],
        ),
        returnValue:
            _i16.Future<_i11.Either<_i21.Failure, List<_i10.Surah>>>.value(
                _FakeEither_9<_i21.Failure, List<_i10.Surah>>(
          this,
          Invocation.method(
            #getSurahs,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i11.Either<_i21.Failure, List<_i10.Surah>>>.value(
                _FakeEither_9<_i21.Failure, List<_i10.Surah>>(
          this,
          Invocation.method(
            #getSurahs,
            [],
          ),
        )),
      ) as _i16.Future<_i11.Either<_i21.Failure, List<_i10.Surah>>>);
}

/// A class which mocks [SurahDetailRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahDetailRepository extends _i1.Mock
    implements _i12.SurahDetailRepository {
  @override
  _i16.Future<_i11.Either<_i21.Failure, _i10.SurahDetail>> getSurahDetail(
          {required int? surahNumber}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSurahDetail,
          [],
          {#surahNumber: surahNumber},
        ),
        returnValue:
            _i16.Future<_i11.Either<_i21.Failure, _i10.SurahDetail>>.value(
                _FakeEither_9<_i21.Failure, _i10.SurahDetail>(
          this,
          Invocation.method(
            #getSurahDetail,
            [],
            {#surahNumber: surahNumber},
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i11.Either<_i21.Failure, _i10.SurahDetail>>.value(
                _FakeEither_9<_i21.Failure, _i10.SurahDetail>(
          this,
          Invocation.method(
            #getSurahDetail,
            [],
            {#surahNumber: surahNumber},
          ),
        )),
      ) as _i16.Future<_i11.Either<_i21.Failure, _i10.SurahDetail>>);
}

/// A class which mocks [SurahUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahUsecase extends _i1.Mock implements _i12.SurahUsecase {
  @override
  _i12.SurahRepository get surahRepository => (super.noSuchMethod(
        Invocation.getter(#surahRepository),
        returnValue: _FakeSurahRepository_10(
          this,
          Invocation.getter(#surahRepository),
        ),
        returnValueForMissingStub: _FakeSurahRepository_10(
          this,
          Invocation.getter(#surahRepository),
        ),
      ) as _i12.SurahRepository);

  @override
  _i13.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_11(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_11(
          this,
          Invocation.getter(#log),
        ),
      ) as _i13.Logger);

  @override
  _i16.Future<_i11.Either<_i21.Failure, List<_i10.Surah>>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i16.Future<_i11.Either<_i21.Failure, List<_i10.Surah>>>.value(
                _FakeEither_9<_i21.Failure, List<_i10.Surah>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i11.Either<_i21.Failure, List<_i10.Surah>>>.value(
                _FakeEither_9<_i21.Failure, List<_i10.Surah>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i16.Future<_i11.Either<_i21.Failure, List<_i10.Surah>>>);
}

/// A class which mocks [SurahDetailUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahDetailUsecase extends _i1.Mock
    implements _i12.SurahDetailUsecase {
  @override
  _i12.SurahDetailRepository get surahDetailRepository => (super.noSuchMethod(
        Invocation.getter(#surahDetailRepository),
        returnValue: _FakeSurahDetailRepository_12(
          this,
          Invocation.getter(#surahDetailRepository),
        ),
        returnValueForMissingStub: _FakeSurahDetailRepository_12(
          this,
          Invocation.getter(#surahDetailRepository),
        ),
      ) as _i12.SurahDetailRepository);

  @override
  _i16.Future<_i11.Either<_i21.Failure, _i10.SurahDetail>> call(
          int? surahNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [surahNumber],
        ),
        returnValue:
            _i16.Future<_i11.Either<_i21.Failure, _i10.SurahDetail>>.value(
                _FakeEither_9<_i21.Failure, _i10.SurahDetail>(
          this,
          Invocation.method(
            #call,
            [surahNumber],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i11.Either<_i21.Failure, _i10.SurahDetail>>.value(
                _FakeEither_9<_i21.Failure, _i10.SurahDetail>(
          this,
          Invocation.method(
            #call,
            [surahNumber],
          ),
        )),
      ) as _i16.Future<_i11.Either<_i21.Failure, _i10.SurahDetail>>);
}

/// A class which mocks [SurahCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahCubit extends _i1.Mock implements _i14.SurahCubit {
  @override
  _i12.SurahUsecase get surahUsecase => (super.noSuchMethod(
        Invocation.getter(#surahUsecase),
        returnValue: _FakeSurahUsecase_13(
          this,
          Invocation.getter(#surahUsecase),
        ),
        returnValueForMissingStub: _FakeSurahUsecase_13(
          this,
          Invocation.getter(#surahUsecase),
        ),
      ) as _i12.SurahUsecase);

  @override
  _i14.SurahState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeSurahState_14(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeSurahState_14(
          this,
          Invocation.getter(#state),
        ),
      ) as _i14.SurahState);

  @override
  _i16.Stream<_i14.SurahState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i16.Stream<_i14.SurahState>.empty(),
        returnValueForMissingStub: _i16.Stream<_i14.SurahState>.empty(),
      ) as _i16.Stream<_i14.SurahState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void fetch() => super.noSuchMethod(
        Invocation.method(
          #fetch,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i14.SurahState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChange(_i22.Change<_i14.SurahState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);
}
